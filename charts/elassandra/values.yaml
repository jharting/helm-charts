## Elassandra image version
## ref: https://hub.docker.com/r/strapdata/
image:
  repo: "strapdata/elassandra"
  tag: "latest"
  pullPolicy: IfNotPresent
  ## Specify ImagePullSecrets for Pods
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  # pullSecrets: myregistrykey

## Persist data to a persistent volume
persistence:
  enabled: true
  ## cassandra data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 2Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## Minimum memory for development is 4GB and 2 CPU cores
## Minimum memory for production is 8GB and 4 CPU cores
## ref: http://docs.datastax.com/en/archived/cassandra/2.0/cassandra/architecture/architecturePlanningHardware_c.html
resources:
  requests:
    memory: 2Gi
    cpu: 500m
  limits:
    memory: 2Gi
    cpu: 1

## Change cassandra configuration parameters below:
## ref: http://docs.datastax.com/en/cassandra/3.0/cassandra/configuration/configCassandra_yaml.html
## Recommended max heap size is 1/2 of system memory
## Recommeneed heap new size is 1/4 of max heap size
## ref: http://docs.datastax.com/en/cassandra/3.0/cassandra/operations/opsTuneJVM.html
config:
  cluster_name: elassandra
  cluster_size: 3
  seed_size: 1
  num_tokens: 16
  # If you want Cassandra to use this datacenter and rack name,
  # you need to set endpoint_snitch to GossipingPropertyFileSnitch.
  # Otherwise, these values are ignored and datacenter1 and rack1
  # are used.
  dc_name: DC1
  rack_name: RAC1
  endpoint_snitch: GossipingPropertyFileSnitch
  max_heap_size: 1024M
  heap_new_size: 512M
  start_rpc: false
  ports:
    cql: 9042
    thrift: 9160
    # If a JVM Agent is in place
    agent: 7500

## Elasticsearch enable/disabled by setting the java main class to org.apache.cassandra.service.ElassandraDaemon/org.apache.cassandra.service.CassandraDaemon
elasticsearch:
  enabled: true

# Enable JDWP for java debugging
debug:
  enabled: false
  port: 4242

## Liveness and Readiness probe values.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 4
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 15
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 4

## Additional pod-level settings
podSettings:
  # Change this to give pods more time to properly leave the cluster when not using persistent storage.
  terminationGracePeriodSeconds: 300

podManagementPolicy: OrderedReady

## Pod Security Context
securityContext:
  enabled: true
  fsGroup: 1007190000
  runAsUser: 1007190000

# Additional env variables
env:
  JVM_OPTS: "-Dcassandra.ring_delay_ms=60000 -XX:+ExitOnOutOfMemoryError -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2"

## Extra config files mounted in /etc/cassandra.
configs: []

## Extra scripts mounted in /usr/share/cassandra/scripts
scripts:
  postStart.sh: |-
    #!/bin/bash
    echo "Elassandra started"
    exit 0
  preStop.sh: |-
    #!/bin/sh
    set -x
    
    gracefull_stop() {
      nodetool disablethrift
      nodetool disablebinary
      nodetool disablegossip
      nodetool flush
      nodetool drain
      nodetool stop
      nodetool stopdaemon
    }
    
    while [ $(nodetool status | awk "/$CASSANDRA_RACK/{ print \$1,\$2 }" | grep -v $POD_IP | awk '{ print $1 }' | grep -v UN) -eq 0 ] ; do
      echo "Waiting all nodes to recover a NORMAL status"
      sleep 5
      pidof java || exit 1
    done

    if [ "$PERSISTENCE_ENABLED" == "true" ]; then
       gracefull_stop
    else 
       nodetool decommission
    fi 
    exit 0
## Extra volumes containing additional files mounted in /usr/share/cassandra/conf.
## (eg. CA certificates)
## Ref: https://kubernetes.io/docs/concepts/storage/volumes/
##
extraVolumes: []

## Extra volume mounts elassandra pod.
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/
##
extraVolumeMounts: []

## Additional pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

## Additional annotations
## https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
annotations: {}

## Configure node selector. Edit code below for adding selector to pods
## ref: https://kubernetes.io/docs/user-guide/node-selection/
# selector:
  # nodeSelector:
    # cloud.google.com/gke-nodepool: pool-db
# selector:
#   nodeSelector:
#     node-role.kubernetes.io/node: "true"

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# affinity:
#   podAntiAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#     - labelSelector:
#         matchExpressions:
#         - key: app
#           operator: In
#           values:
#          - elassandra
#       topologyKey: "kubernetes.io/hostname"
